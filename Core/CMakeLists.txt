set(CORE_INCLUDE "${CMAKE_CURRENT_SOURCE_DIR}/include")
file(GLOB_RECURSE CORE_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/src/*.cpp")
file(GLOB_RECURSE CORE_HEADERS "${CORE_INCLUDE}/*.h")

set(CORE_ADDITIONAL_LIBS)
set(CORE_ADDITIONAL_HEADERS)
set(CORE_DLL_DEPENDENCIES)
find_package(Boost REQUIRED locale)
if(Boost_FOUND)
  set(CORE_BOOST_INCLUDE "${CMAKE_CURRENT_SOURCE_DIR}/Boost/include")
  file(GLOB_RECURSE CORE_BOOST_HEADERS "${CORE_BOOST_INCLUDE}/*.h")
  file(GLOB_RECURSE CORE_BOOST_SOURCE "${CMAKE_CURRENT_SOURCE_DIR}/Boost/src/*.cpp")
  list(APPEND CORE_INCLUDE ${CORE_BOOST_INCLUDE})
  list(APPEND CORE_HEADERS ${CORE_BOOST_HEADERS})
  list(APPEND CORE_SOURCE ${CORE_BOOST_SOURCE})
  list(APPEND CORE_ADDITIONAL_LIBS ${Boost_LIBRARIES})
  list(APPEND CORE_ADDITIONAL_HEADERS "${Boost_INCLUDE_DIRS}")

  if(WIN32)
    set(FOUND_BUILD_TYPE false)
    foreach(LIBRARY ${Boost_LIBRARIES})
      if(FOUND_BUILD_TYPE)
        string(REPLACE ".lib" ".dll" TEMP "${LIBRARY}")
        list(APPEND CORE_DLL_DEPENDENCIES "${TEMP}")
      else()
        if("${LIBRARY}" STREQUAL "debug")
          if("${CMAKE_BUILD_TYPE}" STREQUAL "Debug")
            set(FOUND_BUILD_TYPE true)
          else()
            set(FOUND_BUILD_TYPE false)
          endif()
        elseif("${LIBRARY}" STREQUAL "optimized")
          if("${CMAKE_BUILD_TYPE}" STREQUAL "Release")
            set(FOUND_BUILD_TYPE true)
          else()
            set(FOUND_BUILD_TYPE false)
          endif()
        endif()
      endif()
    endforeach()
  endif(WIN32)
endif(Boost_FOUND)

add_library(CoreStatic STATIC ${CORE_SOURCE})
set_target_properties(CoreStatic PROPERTIES OUTPUT_NAME DynabyteSoftwareStatic)
source_group("Headers" FILES ${CORE_HEADERS})
source_group("Sources" FILES ${CORE_SOURCE})
target_include_directories(CoreStatic PUBLIC "${CORE_INCLUDE}" "${CORE_ADDITIONAL_HEADERS}")
target_compile_definitions(CoreStatic PUBLIC CORE_STATIC)
target_link_libraries(CoreStatic ${CORE_ADDITIONAL_LIBS})

add_library(CoreDynamic SHARED ${CORE_SOURCE})
set_target_properties(CoreDynamic PROPERTIES OUTPUT_NAME DynabyteSoftware)
source_group("Headers" FILES ${CORE_HEADERS})
source_group("Sources" FILES ${CORE_SOURCE})
target_include_directories(CoreDynamic PUBLIC "${CORE_INCLUDE}" "${CORE_ADDITIONAL_HEADERS}")
target_compile_definitions(CoreDynamic PRIVATE CORE_DYNAMIC BOOST_ALL_DYN_LINK)
target_link_libraries(CoreDynamic ${CORE_ADDITIONAL_LIBS})

foreach(DEPENDENCY ${CORE_DLL_DEPENDENCIES})
  message(STATUS ${DEPENDENCY})
  get_filename_component(TEMP ${DEPENDENCY} NAME)
  add_custom_command(TARGET CoreDynamic POST_BUILD
                     COMMAND ${CMAKE_COMMAND} -E copy_if_different ${DEPENDENCY} ${CMAKE_LIBRARY_OUTPUT_DIRECTORY}/${TEMP})
endforeach()